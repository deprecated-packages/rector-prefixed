includes:
    - vendor/symplify/phpstan-extensions/config/config.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

parameters:
    level: max

    checkGenericClassInNonGenericObjectType: false

    paths:
        - config
        - src
        - tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - *Source/*

    ignoreErrors:
        -
            message: '#Do not use static property#'
            paths:
                - tests/bootstrap.php

        -
            message: '#Parameter "(.*?)" cannot be nullable#'
            paths:
                 - src/PhpDoc/NodeFactory/*PhpDocNodeFactory.php
                 - src/NodeAnalyzer/SetterClassMethodAnalyzer.php

        -
            message: '#Do not inherit from abstract class, better use composition#'
            paths:
                - src/PhpDoc/*DocNodeFactory.php

        - '#Use decoupled factory service to create "PHPStan\\Type\\MixedType" object#'

        -
            message: '#Use void instead of modify and return self object#'
            paths:
                 - src/Rector/*Rector.php

        - '#Parameter \#4 \$classWithConstants of class Rector\\Privatization\\ValueObject\\ReplaceStringWithClassConstant constructor expects class\-string, string given#'

        -
            message: '#Use another value object over array with string\-keys and objects, array<string, ValueObject\>#'
            paths:
                - src/Rector/Class_/TranslationBehaviorRector.php

        - '#Method Rector\\Doctrine\\PhpDoc\\NodeFactory\\MultiPhpDocNodeFactory\:\:getTagValueNodeClassesToAnnotationClasses\(\) should return array<class\-string<Rector\\BetterPhpDocParser\\ValueObject\\PhpDocNode\\AbstractTagValueNode\>, class\-string<Doctrine\\ORM\\Mapping\\Annotation\>\> but returns array<string, string\>#'

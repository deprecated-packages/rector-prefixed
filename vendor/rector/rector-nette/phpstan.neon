includes:
    - vendor/symplify/phpstan-extensions/config/config.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

parameters:
    level: max

    paths:
        - config
        - src
        - tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - *Source/*

    ignoreErrors:
        -
            message: '#Parameter "(.*?)" cannot be nullable#'
            paths:
                 - src/NetteKdyby/ValueObject/*
                 - src/NetteKdyby/NodeManipulator
                 - src/Nette/Rector/FuncCall/PregFunctionToNetteUtilsStringsRector.php
                 - src/Nette/NodeAnalyzer/ReturnAnalyzer.php

        # useful nesting
        -
            message: '#new <class\> is limited to 3 "new <class\>\(new <class\>\)\)" nesting to each other\. You have 4 nesting#'
            path: 'config/sets/*'

        # fixed on php-parser dev
        - '#Method Rector\\NetteKdyby\\NodeFactory\\EventValueObjectClassFactory\:\:wrapClassToNamespace\(\) should return PhpParser\\Node\\Stmt\\Namespace_ but returns PhpParser\\Node#'

        # known types, probably make an extension for it?
        - '#Parameter \#1 \$node of method Rector\\NetteKdyby\\Naming\\VariableNaming\:\:resolveFromMethodCall\(\) expects PhpParser\\Node\\Expr\\MethodCall\|PhpParser\\Node\\Expr\\NullsafeMethodCall\|PhpParser\\Node\\Expr\\StaticCall, PhpParser\\Node given#'

        # cleanup later
        -
            message: '#Parameter "eventAndListenerTree" cannot be nullable#'
            path: src/NetteKdyby/ContributeEventClassResolver.php
        -
            message: '#Parameter "node" cannot be nullable#'
            path: src/Nette/Rector/FuncCall/PregMatchFunctionToNetteUtilsStringsRector.php

        # fixed on symplify dev-main
        - '#Use decoupled factory service to create "PHPStan\\Type\\MixedType" object#'

        # this is only setter injection of mapper - possibly cover in symplify
        -
            message: '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'
            path: src/NetteCodeQuality/NodeResolver/MethodNamesByInputNamesResolver.php
        -
            message: '#\$this as argument is not allowed\. Refactor method to service composition#'
            path: src/NetteCodeQuality/NodeResolver/MethodNamesByInputNamesResolver.php

        # refactor later to value object
        -
            message: '#Use another value object over array with string\-keys and objects, array<string, ValueObject\>#'
            path: src/Nette/ValueObject/TemplateParametersAssigns.php
